{"version":3,"sources":["webpack:///./lib/store/mutations/common.js"],"names":["initSystem","state","params","defaultConfig","JSON","parse","stringify","config","setConfig","triggerOpenEditListModal","triggerOpenEditList","Date","getTime","triggerOpenLuckyModal","triggerOpenLucky","triggerOpenResultModal","triggerOpenResult","triggerOpenSettingModal","triggerOpenSetting","editShortList","data","shortlist","luckySN","sn","lucky","includes","push","index","indexOf","splice","award","split","setShortListInput","shortlistInput","shortlist_sort","shortlistInputObj","shortlistInputArr","map","string","trim","Obj","name","pos","filter","matchName","del","forEach","length","key","value","join","setShortlistRandomSort","shortlistSN","loopTime","shortlistSN_new","i","parseInt","Math","random","setFocusSN","focusSN","setFocusSN2LuckySN","filterResult"],"mappings":"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","file":"app/index.9e722fa01a3b8b17e8a4.hot-update.js","sourcesContent":["export default {\n    initSystem(state, params) {\n        let defaultConfig = JSON.parse( JSON.stringify( state.defaultConfig) );\n\n        state.config = defaultConfig;\n    },\n\n    setConfig(state, params) {\n        let config = JSON.parse( JSON.stringify( state.config) );\n        config = {...config, ...params.config};\n        state.config = config;\n    },\n\n    triggerOpenEditListModal(state, params) {\n        state.triggerOpenEditList = new Date().getTime();\n    },\n\n    triggerOpenLuckyModal(state, params) {\n        state.triggerOpenLucky = new Date().getTime();\n    },\n\n    triggerOpenResultModal(state,params) {\n        state.triggerOpenResult = new Date().getTime();\n    },\n\n    triggerOpenSettingModal(state,params) {\n        state.triggerOpenSetting = new Date().getTime();\n    },\n\n    editShortList(state, params) {\n        let data = params.data;\n        let shortlist = JSON.parse(JSON.stringify(state.shortlist));\n        let luckySN = JSON.parse(JSON.stringify(state.luckySN));\n\n        let sn = data.sn;\n        if (data.lucky == \"1\") {\n            if (!luckySN.includes(sn)) {\n                luckySN.push(sn);\n            }\n        } else {\n            let index = luckySN.indexOf(sn);\n            if (index >= 0) {\n                luckySN.splice(index, 1);\n            }\n        }\n\n        shortlist[sn].award = data.award.split(\",\");\n\n        state.shortlist = shortlist;\n        state.luckySN = luckySN;\n    },\n\n    setShortListInput(state, params) {\n        let shortlistInput = params.shortlistInput;\n        let shortlist = JSON.parse(JSON.stringify(state.shortlist));\n        let shortlist_sort = JSON.parse(JSON.stringify(state.shortlist_sort));\n\n\n        let shortlistInputObj = {};\n        let shortlistInputArr = shortlistInput.split(\"\\n\").map(function(data) {\n            data = data.split(\"|\").map(function(string) {\n                return string.trim();\n            });\n            let Obj = {\n                name: data[0],\n                pos: data[1] || \"\",\n            };\n            return Obj;\n        }).filter(function(data) {\n            if (!!data.name) {\n                shortlistInputObj[data.name] = data;\n                return !!data.name;\n            } else {\n                return false;\n            }\n        });\n\n\n        let matchName = [];\n        shortlist = shortlist.map(function(data) {\n            data.del = !!!shortlistInputObj[data.name];\n            if (!data.del) {\n                matchName.push(data.name);\n                data.pos = shortlistInputObj[data.name].pos;\n                if (!shortlist_sort.includes(data.sn)) {\n                    shortlist_sort.push(data.sn);\n                }\n            } else {\n                shortlist_sort = shortlist_sort.filter(function(sn) {\n                    return sn != data.sn;\n                });\n            }\n            return data;\n        });\n\n        shortlistInputArr.forEach(function(data) {\n            if (!matchName.includes(data.name)) {\n                let sn = shortlist.length;\n                shortlist.push({\n                    sn: sn,\n                    name: data.name,\n                    pos: data.pos,\n                    award: [],\n                    del: false,\n                });\n                shortlist_sort.push(sn);\n            }\n        });\n\n        state.shortlistInput = shortlistInputArr.map(function(data) {\n            return [\"name\", \"pos\"].map(function(key) {\n                return data[key]\n            }).filter(function(value) { return !!value }).join(\"|\");\n        }).join(\"\\n\");\n        state.shortlist = shortlist;\n        state.shortlist_sort = shortlist_sort;\n    },\n\n    setShortlistRandomSort(state, params) {\n        let shortlist = JSON.parse(JSON.stringify(state.shortlist));\n        let shortlist_sort = JSON.parse(JSON.stringify(state.shortlist_sort));\n\n        let shortlistSN = shortlist.filter(function(data) {\n            return !data.del;\n        }).map(function(data) {\n            return data.sn;\n        });\n\n        let loopTime = shortlistSN.length;\n        let shortlistSN_new = [];\n        for (let i = 0; i < loopTime; i++) {\n            let length = shortlistSN.length;\n            let index = parseInt(Math.random() * 100 % length);\n            shortlistSN_new.push(shortlistSN[index]);\n            shortlistSN.splice(index, 1);\n        }\n        state.shortlist_sort = shortlistSN_new;\n    },\n\n    setFocusSN(state, params) {\n        state.focusSN = params;\n    },\n\n    setFocusSN2LuckySN(state, params) {\n        let shortlist = JSON.parse(JSON.stringify(state.shortlist));\n        let luckySN = JSON.parse(JSON.stringify(state.luckySN));\n        let focusSN = JSON.parse(JSON.stringify(state.focusSN));\n\n        let filterResult = shortlist.filter(function(data) {\n            if (data.sn == focusSN) {\n                data.award.push(params.award);\n                return true;\n            } else {\n                return false;\n            }\n        });\n\n        if (filterResult.length > 0 && !luckySN.includes(focusSN)) {\n            luckySN.push(focusSN);\n        }\n\n        state.focusSN = null;\n        state.luckySN = luckySN;\n        state.shortlist = shortlist;\n\n    }\n}"],"sourceRoot":""}