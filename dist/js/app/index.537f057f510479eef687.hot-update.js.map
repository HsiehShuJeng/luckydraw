{"version":3,"sources":["webpack:///app/components/common/headerBarBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAEA;;;;AAEA;AACA,0CADA;AAEA;AACA;AACA,uCAFA;AAFA;;AAQA,mBACA;AACA,gBADA;AAEA;AAFA,CADA,EAKA;AACA,gBADA;AAEA;AAFA,CALA,EASA;AACA,eADA;AAEA;AAFA,CATA,EAaA;AACA,cADA;AAEA;AAFA,CAbA,EAiBA;AACA,cADA;AAEA;AAFA,CAjBA,EAqBA;AACA,cADA;AAEA;AAFA,CArBA,EAyBA;AACA,cADA;AAEA;AAFA,CAzBA,EA6BA;AACA,cADA;AAEA;AAFA,CA7BA;;AAmCA;;kBAEA;AACA;AACA;AACA,uBADA;AAEA,4BAFA;AAGA,iCAHA;AAIA,8BAJA;AAKA;AALA;AAOA,KATA;AAUA;AACA;AACA;AACA;AACA,SAJA;AAKA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAnBA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAJA,EAIA,QAJA;AAKA,aAhBA,MAgBA;AACA;AACA;AACA;AACA;AACA,iBAJA,EAIA,GAJA;AAMA;AACA,SAjDA;AAkDA;AACA;AACA;AACA,SArDA;AAsDA;AACA;AACA;AACA;AAzDA,KAVA;AAqEA,aArEA;AAwEA,2BACA,uBACA,kBADA,EADA,CAxEA;AA6EA,WA7EA,qBA6EA,CACA,CA9EA;;AA+EA,aA/EA;AAkFA;AAlFA,C","file":"app/index.537f057f510479eef687.hot-update.js","sourcesContent":["<script>\nimport Vue from 'vue';\nimport { mapActions, mapGetters } from 'vuex';\n\nconst audio = {\n    ding: new Audio(\"./dist/mp3/ding.mp3\"),\n    winner: [\n        // new Audio(\"./dist/mp3/winner1.mp3\"),\n        new Audio(\"./dist/mp3/winner2.mp3\"),\n    ]\n}\n\nlet waitTimeArr = [\n    {\n        \"limit\": 500,\n        \"wait\": 30,\n    },\n    {\n        \"limit\": 100,\n        \"wait\": 50,\n    },\n    {\n        \"limit\": 50,\n        \"wait\": 50,\n    },\n    {\n        \"limit\": 6,\n        \"wait\": 100,\n    },\n    {\n        \"limit\": 4,\n        \"wait\": 500,\n    },\n    {\n        \"limit\": 3,\n        \"wait\": 800,\n    },\n    {\n        \"limit\": 2,\n        \"wait\": 1000,\n    },\n    {\n        \"limit\": 1,\n        \"wait\": 1100,\n    },\n];\n\nlet luckyActionTimer = null;\n\nexport default {\n    data: function(){\n        return {\n            validSN: [],\n            validSNLength: 0,\n            validSNRandomRange: 0,\n            defaultRunTime: 50,\n            runTime: 0,\n        }\n    },\n    methods: {\n        editList: function(){\n            const that = this;\n            that.$store.dispatch(\"triggerOpenEditListModal\");\n        },\n        getLucky: function(){\n            const that = this;\n            that.validSN = that.validShortlistSN;\n            that.validSNLength = that.validSN.length;\n            that.validSNRandomRange = Math.pow(10, (that.validSNLength+\"\").length);\n\n            that.$store.dispatch(\"setFocusSN\", null);\n\n            that.runTime = that.defaultRunTime;\n\n            if (that.validSN.length > 0) {\n                clearTimeout(luckyActionTimer);\n                that.luckyAction();\n            }\n        },\n        luckyAction: function(){\n            const that = this;\n            let index = parseInt(Math.random() * 100000 % that.validSNLength);\n            audio.ding.play();\n            that.$store.dispatch(\"setFocusSN\", that.validSN[index]);\n            if (that.runTime > 0) {\n                let waitTime = 0;\n                for (let index in waitTimeArr) {\n                    if (that.runTime >= waitTimeArr[index].limit) {\n                        waitTime = waitTimeArr[index].wait;\n                        break;\n                    }\n                }\n\n                that.runTime = that.runTime - 1;\n                clearTimeout(luckyActionTimer);\n                luckyActionTimer = setTimeout(function(){\n                    audio.ding.pause();\n                    audio.ding.currentTime = 0;\n                    that.luckyAction();\n                }, waitTime);\n            } else {\n                setTimeout(function(){\n                    that.$store.dispatch(\"triggerOpenLuckyModal\");\n                    let index = parseInt(Math.random() * 10 % audio.winner.length);\n                    audio.winner[index].play();\n                }, 600);\n\n            }\n        },\n        showResult: function(){\n            const that = this;\n            that.$store.dispatch(\"triggerOpenResultModal\");\n        },\n        showSetting: function(){\n            const that = this;\n            that.$store.dispatch(\"triggerOpenSettingModal\");\n        },\n    },\n    watch: {\n\n    },\n    computed: {\n        ...mapGetters([\n            \"validShortlistSN\",\n        ])\n    },\n    mounted() {\n    },\n    props: {\n\n    },\n    components: {\n\n    }\n};\n</script>"],"sourceRoot":""}